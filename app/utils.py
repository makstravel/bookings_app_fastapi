from datetime import datetime, timedelta  # Импортируем необходимые классы для работы с датой и временем

def get_month_days(date: datetime = datetime.today()):
    """
    Генерирует список словарей с датами на два года начиная с заданной даты.
    Args:
        date (datetime): Дата, с которой начинается генерация (по умолчанию - сегодняшняя дата).
    Returns:
        list: Список словарей, каждый из которых содержит дату и ее форматированное представление.
    """
    # Устанавливаем начальную дату для генерации, используя год и месяц из аргумента date
    counter = datetime(date.year, date.month, datetime.today().day, tzinfo=date.tzinfo)
    date_list = []  # Инициализируем пустой список для хранения дат
    for _ in range(365*2):  # Генерируем даты на два года (730 дней)
        # Добавляем словарь с текущей датой и ее форматированным представлением в список
        date_list.append(
            {"date": counter.date(), "date_formatted": counter.strftime("%Y-%m-%d")}
        )
        counter += timedelta(days=1)  # Увеличиваем дату на один день
    return date_list  # Возвращаем список с датами


def format_number_thousand_separator(
    number: int,
    separator: str = " ",  # По умолчанию используем пробел в качестве разделителя
):
    """
    Форматирует число, добавляя разделитель для тысяч.
    Args:
        number (int): Число, которое нужно форматировать.
        separator (str): Символ, который будет использоваться в качестве разделителя (по умолчанию пробел).
    Returns:
        str: Строка с отформатированным числом.
    """
    # Форматируем число с добавлением разделителей для тысяч и заменяем запятые на заданный разделитель
    return f"{number:,}".replace(",", separator)
